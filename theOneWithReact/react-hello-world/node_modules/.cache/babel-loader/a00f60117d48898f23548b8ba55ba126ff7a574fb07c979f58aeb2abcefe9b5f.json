{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Products.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ProductList(){var[products,setProducts]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[newProductName,setNewProductName]=useState('');const[newProductPrice,setNewProductPrice]=useState('');const fetchData=async()=>{setLoading(true);setError(null);console.log(\"Running fetch data\");try{const response=await fetch('http://localhost:5001/api/Products');if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const data=await response.json();console.log(\"API data:\",data);// added console log\nsetProducts(data);console.log(\"Products state:\",products);//added console log\nconsole.log(\"Is array:\",Array.isArray(products));//added console log\n}catch(err){setError(err);}finally{setLoading(false);}};//Send to python for graph analysis\n//\nconst[histogramImage,setHistogramImage]=useState(null);const[data,setData]=useState({A:10,B:15,C:20,D:10,E:25});//const [processedResult, setProcessedResult] = useState(null);\n//products\n//Send to python\nconst handleProcessData=async()=>{try{const response=await fetch('http://localhost:8000/api/createProductDataHistogram',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({input:products})});if(response.ok){const imageBlob=await response.blob();const imageUrl=URL.createObjectURL(imageBlob);setHistogramImage(imageUrl);}else{console.error('Error fetching histogram:',response.status);}//const data = await response.json();\n//setProcessedResult(data);\n}catch(error){console.error('Error processing data:',error);}};//Delete data\nconst handleDelete=async id=>{try{const response=await fetch(`http://localhost:5000/api/Products/${id}`,{method:'DELETE'});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}console.log(\"Legnth of products: \"+products.length);console.log(\"Products: \");console.log(products);// Update the product list after successful deletion\nsetProducts(prevProducts=>prevProducts.filter(product=>product.id!==id));}catch(err){setError(err);}};useEffect(()=>{fetchData();},[]);//Add product\nconst handleAddProduct=async()=>{try{const response=await fetch('http://localhost:5000/api/Products/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name:newProductName,price:parseFloat(newProductPrice)})});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const newProduct=await response.json();setProducts(prevProducts=>[...prevProducts,newProduct]);setNewProductName('');setNewProductPrice('');//clear form.      \n}catch(err){setError(err);}};if(error){return/*#__PURE__*/_jsx(\"h1\",{children:error.message});}return/*#__PURE__*/_jsxs(\"div\",{className:\"ProductList\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Products (Dotnet) \",/*#__PURE__*/_jsx(\"button\",{onClick:()=>fetchData(),children:\"Fetch Data!\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Product Name\",value:newProductName,onChange:e=>setNewProductName(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Product Price\",value:newProductPrice,onChange:e=>setNewProductPrice(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddProduct,children:\"Add Product\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:products&&products.map(product=>/*#__PURE__*/_jsxs(\"li\",{children:[product.name,\" - $\",product.price,/*#__PURE__*/_jsx(\"a\",{children:\"   \"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(product.id),children:\"X\"})]},product.id))}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleProcessData(),children:\"Display data!\"}),histogramImage&&/*#__PURE__*/_jsx(\"img\",{src:histogramImage,alt:\"Histogram\"})]});}export default ProductList;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ProductList","products","setProducts","loading","setLoading","error","setError","newProductName","setNewProductName","newProductPrice","setNewProductPrice","fetchData","console","log","response","fetch","ok","Error","status","data","json","Array","isArray","err","histogramImage","setHistogramImage","setData","A","B","C","D","E","handleProcessData","method","headers","body","JSON","stringify","input","imageBlob","blob","imageUrl","URL","createObjectURL","handleDelete","id","length","prevProducts","filter","product","handleAddProduct","name","price","parseFloat","newProduct","children","message","className","onClick","type","placeholder","value","onChange","e","target","map","src","alt"],"sources":["/home/hello/Documents/Git/ReactAngular/theOneWithReact/react-hello-world/src/Products.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './Products.css';\n\nfunction ProductList() {\n  \n  var [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newProductName, setNewProductName] = useState('');\n  const [newProductPrice, setNewProductPrice] = useState('');\n  \n  const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      console.log(\"Running fetch data\");\n\n      try {\n        const response = await fetch('http://localhost:5001/api/Products');\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log(\"API data:\", data); // added console log\n        setProducts(data);\n        console.log(\"Products state:\", products); //added console log\n        console.log(\"Is array:\", Array.isArray(products)); //added console log\n\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    \n    //Send to python for graph analysis\n    //\n    const [histogramImage, setHistogramImage] = useState(null);\n\tconst [data, setData] = useState({\n\t\tA: 10,\n\t\tB: 15,\n\t\tC: 20,\n\t\tD: 10,\n\t\tE: 25,\n\t  });\n    //const [processedResult, setProcessedResult] = useState(null);\n   \t//products\n    //Send to python\n\tconst handleProcessData = async () => {\n\t\ttry {\n\t\t\n\t\t  const response = await fetch('http://localhost:8000/api/createProductDataHistogram', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t  'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({ input: products }),\n\t\t  });\n\t\t  \n\t\t   if (response.ok) {\n                const imageBlob = await response.blob();\n                const imageUrl = URL.createObjectURL(imageBlob);\n                setHistogramImage(imageUrl);\n            } else {\n                console.error('Error fetching histogram:', response.status);\n            }\n\t\t  \n\t\t  //const data = await response.json();\n\t\t  //setProcessedResult(data);\n\t\t} catch (error) {\n\t\t  console.error('Error processing data:', error);\n\t\t}\n   };\n    \n    \n    \n    //Delete data\n  \tconst handleDelete = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/Products/${id}`, {\n        method: 'DELETE',\n      });\t\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      console.log(\"Legnth of products: \" + products.length)\n      console.log(\"Products: \")\n      console.log(products)\n      \n      // Update the product list after successful deletion\n      setProducts((prevProducts) => prevProducts.filter((product) => product.id !== id));  \n    } catch (err) {\n      setError(err);\n    }\n  };\n  \n   useEffect(() => {\n\t\tfetchData();\n   }, []);\n   \n  //Add product\n  const handleAddProduct = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/Products/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: newProductName,\n          price: parseFloat(newProductPrice),\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const newProduct = await response.json();\n      setProducts((prevProducts) => [...prevProducts, newProduct]);\n      setNewProductName('');\n      setNewProductPrice(''); //clear form.      \n    } catch (err) {\n      setError(err);\n    }\n  };\n  \n  if(error)\n  {\n  \treturn <h1>{error.message}</h1>;\n  }\n\n  return (\n  \t<div className=\"ProductList\">\n  \t\n\t  \t<h2>Products (Dotnet) <button onClick={() => fetchData()}>Fetch Data!</button>\n\t  \t</h2>\n\t  \t\n\t  \t<div>\n\t\t    <input\n\t\t      type=\"text\"\n\t\t      placeholder=\"Product Name\"\n\t\t      value={newProductName}\n\t\t      onChange={(e) => setNewProductName(e.target.value)}\n\t\t    />\n\t\t    <input\n\t\t      type=\"number\"\n\t\t      placeholder=\"Product Price\"\n\t\t      value={newProductPrice}\n\t\t      onChange={(e) => setNewProductPrice(e.target.value)}\n\t\t    />\n\t\t    <button onClick={handleAddProduct}>Add Product</button>\n      \t</div>\n\t  \t\n\t  \t<ul>\n\t\t    {products && products.map((product) => (\n\t\t      <li key={product.id}>\n\t\t        {product.name} - ${product.price}\n\t\t        <a>   </a>\n\t\t        <button onClick={() => handleDelete(product.id)}>X</button>\n\t\t      </li>\n\t\t    ))}\n      \t</ul>     \t\n        <button onClick={() => handleProcessData()}>Display data!</button>\n        {histogramImage && <img src={histogramImage} alt=\"Histogram\" />}\n  \t</div>\n  );\n}\n\nexport default ProductList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
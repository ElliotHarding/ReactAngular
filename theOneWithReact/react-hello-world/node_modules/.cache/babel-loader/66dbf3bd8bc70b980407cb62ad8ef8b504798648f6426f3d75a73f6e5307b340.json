{"ast":null,"code":"var _jsxFileName = \"/home/hello/Documents/Git/ReactAngular/theOneWithReact/react-hello-world/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const items = [\"Apple\", \"Banana\", \"Orange\"];\n  const [message, setMessage] = useState('');\n  var [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newProductName, setNewProductName] = useState('');\n  const [newProductPrice, setNewProductPrice] = useState('');\n\n  /*  \n   const getProducts = async () => {\n    setLoading(true);\n    setError(null);\n     try {\n      const response = await fetch('https://localhost:5000/api/Products'); // Assuming your route is api/Products\n       if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n       const data = await response.json();\n      setProducts(data);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n   const handleRefresh = () => {\n    getProducts();\n  \t};*/\n\n  //Retrieve data\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      console.log(\"Running fetch data\");\n      try {\n        const response = await fetch('http://localhost:5000/api/Products');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"API data:\", data); // added console log\n        setProducts(data);\n        console.log(\"Products state:\", products); //added console log\n        console.log(\"Is array:\", Array.isArray(products)); //added console log\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n  }, []);\n\n  //Delete data\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/Products/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      console.log(\"Legnth of products: \" + products.length);\n      console.log(\"Products: \");\n      console.log(products);\n\n      // Update the product list after successful deletion\n      setProducts(prevProducts => prevProducts.filter(product => product.id !== id));\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  //Add product\n  const handleAddProduct = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/Products/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: newProductName,\n          price: parseFloat(newProductPrice)\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const newProduct = await response.json();\n      setProducts(prevProducts => [...prevProducts, newProduct]);\n      setNewProductName('');\n      setNewProductPrice(''); //clear form.\n\n      await fetchData();\n    } catch (err) {\n      setError(err);\n    }\n  };\n\n  //Python vars\n  const [apiData, setApiData] = useState(null);\n  const [inputData, setInputData] = useState('');\n  const [processedResult, setProcessedResult] = useState(null);\n\n  //Get from python\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/data');\n        const data = await response.json();\n        setApiData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  //Send to python\n  const handleProcessData = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/process_data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: inputData\n        })\n      });\n      const data = await response.json();\n      setProcessedResult(data);\n    } catch (error) {\n      console.error('Error processing data:', error);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }, this);\n  }\n  console.log('Products state:', products);\n  var theHelloWorld = \"hello-world!\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: theHelloWorld\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRefresh,\n      children: \"Refresh Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Product Name\",\n        value: newProductName,\n        onChange: e => setNewProductName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Product Price\",\n        value: newProductPrice,\n        onChange: e => setNewProductPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProduct,\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products && products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.name, \" - $\", product.price, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(product.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Python sending data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), apiData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: apiData.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputData,\n        onChange: e => setInputData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProcessData,\n        children: \"Process Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 6\n      }, this), processedResult && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Processed: \", JSON.stringify(processedResult)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8kR9oynj/MIJGqrnYztel5in0Bg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","items","message","setMessage","products","setProducts","loading","setLoading","error","setError","newProductName","setNewProductName","newProductPrice","setNewProductPrice","fetchData","console","log","response","fetch","ok","Error","status","data","json","Array","isArray","err","handleDelete","id","method","length","prevProducts","filter","product","handleAddProduct","headers","body","JSON","stringify","name","price","parseFloat","newProduct","apiData","setApiData","inputData","setInputData","processedResult","setProcessedResult","handleProcessData","input","children","fileName","_jsxFileName","lineNumber","columnNumber","theHelloWorld","className","onClick","handleRefresh","type","placeholder","value","onChange","e","target","map","item","index","_c","$RefreshReg$"],"sources":["/home/hello/Documents/Git/ReactAngular/theOneWithReact/react-hello-world/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n\n  const items = [\"Apple\", \"Banana\", \"Orange\"];\n  const [message, setMessage] = useState('');\n  \n  var [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [newProductName, setNewProductName] = useState('');\n  const [newProductPrice, setNewProductPrice] = useState('');\n  \n  \n  /*  \n   const getProducts = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://localhost:5000/api/Products'); // Assuming your route is api/Products\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setProducts(data);\n    } catch (err) {\n      setError(err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n   const handleRefresh = () => {\n    getProducts();\n  \t};*/\n  \n  //Retrieve data\n  useEffect(() => {\n    \n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      console.log(\"Running fetch data\");\n\n      try {\n        const response = await fetch('http://localhost:5000/api/Products');\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log(\"API data:\", data); // added console log\n        setProducts(data);\n        console.log(\"Products state:\", products); //added console log\n        console.log(\"Is array:\", Array.isArray(products)); //added console log\n\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n  }, []);\n  \n  //Delete data\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/Products/${id}`, {\n        method: 'DELETE',\n      });\t\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      console.log(\"Legnth of products: \" + products.length)\n      console.log(\"Products: \")\n      console.log(products)\n      \n      // Update the product list after successful deletion\n      setProducts((prevProducts) => prevProducts.filter((product) => product.id !== id));  \n      \n    } catch (err) {\n      setError(err);\n    }\n  };\n  \n  //Add product\n  const handleAddProduct = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/Products/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: newProductName,\n          price: parseFloat(newProductPrice),\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const newProduct = await response.json();\n      setProducts((prevProducts) => [...prevProducts, newProduct]);\n      setNewProductName('');\n      setNewProductPrice(''); //clear form.\n      \n      await fetchData();\n      \n    } catch (err) {\n      setError(err);\n    }\n  };\n  \n  \n  \n  //Python vars\n  const [apiData, setApiData] = useState(null);\n  const [inputData, setInputData] = useState('');\n  const [processedResult, setProcessedResult] = useState(null);\n  \n  //Get from python\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/data');\n        const data = await response.json();\n        setApiData(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  \n  //Send to python\n  const handleProcessData = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/process_data', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ input: inputData }),\n      });\n      const data = await response.json();\n      setProcessedResult(data);\n    } catch (error) {\n      console.error('Error processing data:', error);\n    }\n  };\n  \n  \n  \n  if(error)\n  {\n  \treturn <h1>{error.message}</h1>;\n  }\n  \n  console.log('Products state:', products);\n  \n  var theHelloWorld = \"hello-world!\"\n  return (\n    <div className=\"App\">\n      <h1>{theHelloWorld}</h1>  \n      <button onClick={handleRefresh}>Refresh Data</button>\n      <h1>Products</h1>\n      \n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Product Name\"\n          value={newProductName}\n          onChange={(e) => setNewProductName(e.target.value)}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Product Price\"\n          value={newProductPrice}\n          onChange={(e) => setNewProductPrice(e.target.value)}\n        />\n        <button onClick={handleAddProduct}>Add Product</button>\n      </div>\n      \n      <ul>\n        {products && products.map((product) => (\n          <li key={product.id}>\n            {product.name} - ${product.price}\n            <button onClick={() => handleDelete(product.id)}>X</button>\n          </li>\n        ))}\n      </ul>\n     \n      <h1>Items</h1>\n      <ul>\n\t\t  {items.map((item, index) => (\n\t\t    <li key={index}>{item}</li>\n\t\t  ))}\n    \t</ul>\n    \t\n      <h1></h1>\n      <h1></h1>\n      <h1>Python sending data</h1>\n    \t\n      {apiData && <p>{apiData.message}</p>}\n\t  <div>\n\t    <input\n\t      type=\"text\"\n\t      value={inputData}\n\t      onChange={(e) => setInputData(e.target.value)}\n\t    />\n\t    <button onClick={handleProcessData}>Process Data</button>\n\t    {processedResult && <p>Processed: {JSON.stringify(processedResult)}</p>}\n\t  </div>\n    \t\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}